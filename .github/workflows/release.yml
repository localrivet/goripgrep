name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.24'

    - name: Run tests
      run: go test -v ./...

    - name: Build cross-platform binaries
      run: |
        mkdir -p dist
        
        # Define platforms
        platforms=(
          "linux/amd64"
          "linux/arm64"
          "darwin/amd64"
          "darwin/arm64"
          "windows/amd64"
          "windows/arm64"
        )
        
        for platform in "${platforms[@]}"; do
          IFS='/' read -r GOOS GOARCH <<< "$platform"
          
          # Create platform directory
          platform_dir="dist/${GOOS}-${GOARCH}"
          mkdir -p "$platform_dir"
          
          binary_name="goripgrep"
          if [ "$GOOS" = "windows" ]; then
            binary_name="${binary_name}.exe"
          fi
          
          echo "Building for $GOOS/$GOARCH..."
          env GOOS=$GOOS GOARCH=$GOARCH CGO_ENABLED=0 go build \
            -ldflags="-s -w -X main.version=${GITHUB_REF#refs/tags/}" \
            -o "${platform_dir}/${binary_name}" \
            ./cmd/goripgrep
          
          # Create archive
          archive_name="goripgrep-${GOOS}-${GOARCH}"
          if [ "$GOOS" = "windows" ]; then
            (cd "$platform_dir" && zip "../${archive_name}.zip" "$binary_name")
          else
            (cd "$platform_dir" && tar -czf "../${archive_name}.tar.gz" "$binary_name")
          fi
        done

    - name: Generate checksums
      run: |
        cd dist
        sha256sum * > checksums.txt

    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        files: |
          dist/*.tar.gz
          dist/*.zip
          dist/checksums.txt
        generate_release_notes: true
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 